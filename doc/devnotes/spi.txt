Two modules. They don't share hardware (ie should be configurable as 1 master 1 slave)
Each fifo is 4w (1w=32b) long
What is a frame?

Registers
CR control: reset FIFO, toggle doze/debug modes, dis/enable module, software reset
SR status: module busy? rx/tx complete? frame/word complete? rx/tx over/underflow? rx/tx words greater than watermark?
IER interrupt enable: data match; rx/tx error; rx/tx/frame/word complete; 
DER: dma request
CFGR0 configure0: rx data match only; circular fifo enable; host request control
CFGR1 (only write when module disabled): hardware control; match control; master/slave
DMR0-1 data match: words for match rules in CFGR1
CCR clock config (write with module disabled): 
FCR fifo control: watermarks (more words in fifo than watermark triggers bit in SR
FSR fifo status: # words in fifos

Call sequence for master
- LPSPI_MasterInit
  - [Clock setup]
  - CR.RST = 1
    - software reset 
  - CR.RRF,RTF = 1 
    - reset receiver/transmit fifos 
  - CR = 0
    - Unreset module, disable module
  - CFGR1.MASTER = 1
    - module is master: pcs and sck are outputs
  - CFGR1.PCSPOL = ?
    - active level set for selected pcs
  - CFGR1.OUTCFG,PINCFG,NOSTALL = ?
    - output to tristate or last state between tx
    - sin/sout roles selected
    - stall on fifo over/underflow
  - CCR = ?
    - baudrate configured 
  - FCR.RXWATER,TXWATER = 0
    - rx/tx data flags will be set when more than 0 words in fifo
  - TCR = ?
    - polarity, phase, endianness, framesize, prescale, pcs
  - CR.MEN = 1
    - enable module
  - CCR = ?
    - delay times set as scalars
- LPSPI_MasterTransferCreateHandle
  - records static fsl info. no register changes 
- LPSPI_MasterTransferNonBlocking 
  - read TCR.FRAMESZ 
  - set watermarks: FCR.TXWATER, FCR.RXWATER
    - objective is (apparently) fewer interrupts
  - ...


Slave functions

- LPSPI_SlaveTransferNonBlocking
  - 
